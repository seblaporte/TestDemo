<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<templates>
<template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="step1">if (searchResponse != null)
    return searchResponse.getFeatures()[0].getProperties();
return null;
</template>
<template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="step2">if (searchResponse != null)
    return searchResponse.getFeatures()[0].getProperties();
return new Properties();
</template>
<template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="step3">if (searchResponse != null &amp;&amp; searchResponse.getFeatures() != null)
    return searchResponse.getFeatures()[0].getProperties();
return new Properties();
</template>
<template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="step4">Properties properties = new Properties();
double highestScore = 0L;

if (searchResponse != null &amp;&amp; searchResponse.getFeatures() != null) {
    for (Feature feature : searchResponse.getFeatures()) {
        if (feature.getProperties() != null &amp;&amp; feature.getProperties().getScore() &gt; highestScore) {
            highestScore = feature.getProperties().getScore();
            properties = feature.getProperties();
        }
    }
}

return properties;
</template>
<template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="tu1">// STEP 1
@Test
public void should_return_properties_from_unique_search_response() {

    Properties result = AddressUtils.getPropertiesWithBestScoreFromSearchResponse(searchResponseWithOneResult);

    assertThat(result).isNotNull();
    assertThat(result.getCity()).isEqualTo("Tours");
}${cursor}
</template>
<template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="tu2">// STEP 2
@Test
public void should_return_empty_properties_from_null_search_response() {

    Properties result = AddressUtils.getPropertiesWithBestScoreFromSearchResponse(null);

    assertThat(result).isNotNull();
    assertThat(result.getCity()).isNullOrEmpty();
}${cursor}
</template>
<template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="tu3">// STEP 3
@Test
public void should_return_empty_properties_from_empty_search_response() {

    Properties result = AddressUtils.getPropertiesWithBestScoreFromSearchResponse(new SearchResponse());

    assertThat(result).isNotNull();
    assertThat(result.getCity()).isNullOrEmpty();
}${cursor}
</template>
<template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="tu4">// STEP 4
@Test
public void should_return_highest_scored_properties_from_multiple_search_responses() {

    Properties result = AddressUtils.getPropertiesWithBestScoreFromSearchResponse(searchResponseWithTwoResults);

    assertThat(result).isNotNull();
    assertThat(result.getCity()).isEqualTo("Saint-Pierre-des-Corps");
}${cursor}
</template>
</templates>